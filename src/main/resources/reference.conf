akka.minion {

  # provide via env variable or command line: sbt -Dakka.minion.access-token=<token>
  # create access token at https://github.com/settings/tokens
  access-token = ${?API_KEY}
  http-port = 8080
  http-port = ${?PORT}
  poll-interval = 1m
  poll-interval = ${?POLL_INTERVAL}
  max-api-calls-per-hour = 4500

  team-members = [
    "patriknw",
    "johanandren",
    "jrudolph",
    "raboof",
    "chbatey",
    "ennru",
    "helena",
    "seglo",
    "renatocaval",
    "ignasi35",
    "marcospereira"
  ]

  bots = [
    "akka-ci",
    "lightbend-cla-validator",
    "typesafehub-validator",
  ]

  team-repos = [
    {
      team = "actors",
      repos = [
        "akka/akka",
        "akka/akka-samples",
        "akka/akka-persistence-cassandra",
        "akka/akka-management",
        "akka/akka-persistence-dynamodb",
        "akka/akka-persistence-jdbc",
        "akka/akka-stream-contrib",
        "akka/akka-distributed-workers-scala.g8",
        "akka/akka-quickstart-java.g8",
        "akka/akka-quickstart-scala.g8",
        "akka/akka-sample-cluster-docker-compose-scala",
        "akka/akka-sample-cluster-docker-compose-java",
        "akka/akka-sample-cluster-kubernetes-java",
      ]
    },
    {
      team = "streams"
      repos = [
        "akka/akka-grpc",
        "akka/akka-grpc-quickstart-java.g8",
        "akka/akka-grpc-quickstart-scala.g8"
        "akka/akka-http",
        "akka/akka-http-quickstart-java.g8",
        "akka/akka-http-quickstart-scala.g8",
        "akka/alpakka",
        "akka/alpakka-kafka",
        "akka/akka-stream-contrib",
        "akka/alpakka-samples"
      ]
    },
    {
      team = "others"
      repos = [
        "akka/akka.github.com",
        "akka/akka-minion",
        "akka/akka-paradox",
        "lightbend/paradox",
        "lightbend/sbt-paradox-apidoc",
        "lightbend/config",
        "lightbend/genjavadoc"
      ]
    }
  ]
}
